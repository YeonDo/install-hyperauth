apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: kafka-pvc-1
  namespace: hyperauth
  labels:
    app: kafka-pvc
spec:
  storageClassName: csi-cephfs-sc
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: kafka-pvc-2
  namespace: hyperauth
  labels:
    app: kafka-pvc
spec:
  storageClassName: csi-cephfs-sc
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: kafka-pvc-3
  namespace: hyperauth
  labels:
    app: kafka-pvc
spec:
  storageClassName: csi-cephfs-sc
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---

apiVersion: v1
kind: Service
metadata:
  name: zookeeper
  namespace: hyperauth
  labels:
    app: zookeeper
spec:
  ports:
    - name: zookeeper
      port: 2181
      targetPort: 2181
  selector:
    app: zookeeper
---

apiVersion: v1
kind: Service
metadata:
  name: kafka-1
  namespace: hyperauth
  labels:
    app: kafka-1
spec:
  ports:
    - name: kafka
      port: 9092
      targetPort: 9092
  selector:
    app: kafka-1

---

apiVersion: v1
kind: Service
metadata:
  name: kafka-2
  namespace: hyperauth
  labels:
    app: kafka-2
spec:
  ports:
    - name: kafka
      port: 9092
      targetPort: 9092
  selector:
    app: kafka-2

---

apiVersion: v1
kind: Service
metadata:
  name: kafka-3
  namespace: hyperauth
  labels:
    app: kafka-3
spec:
  ports:
    - name: kafka
      port: 9092
      targetPort: 9092
  selector:
    app: kafka-3


---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: zookeeper
  namespace: hyperauth
  labels:
    app: zookeeper
spec:
  replicas: 1
  selector:
    matchLabels:
      app: zookeeper
  template:
    metadata:
      labels:
        app: zookeeper
    spec:
      containers:
        - name: zookeeper
          image: wurstmeister/zookeeper:3.4.6
          env:
            - name: ALLOW_ANONYMOUS_LOGIN
              value: "yes"
          ports:
            - containerPort: 2181

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka-1
  namespace: hyperauth
  labels:
    app: kafka-1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka-1
  template:
    metadata:
      labels:
        app: kafka-1
    spec:
      imagePullSecrets:
        - name : docker-pull-secret
      containers:
        - name: kafka
          image: wurstmeister/kafka:2.12-2.0.1
          env:
            - name: KAFKA_ADVERTISED_LISTENERS
              value: "INSIDE://kafka-1.hyperauth:9092"
            - name: KAFKA_LISTENERS
              value: "INSIDE://:9092"
            - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
              value: "INSIDE:PLAINTEXT"
            - name: KAFKA_INTER_BROKER_LISTENER_NAME
              value: "INSIDE"
            - name: KAFKA_ZOOKEEPER_CONNECT
              value: "zookeeper:2181"
            - name: KAFKA_CREATE_TOPICS
              value: "tmax:1:3"   # Topic명:Partition개수:Replica개수
            - name: KAFKA_BROKER_ID
              value: "501"
            - name: KAFKA_AUTO_CREATE_TOPICS_ENABLE
              value: "true"
            - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
              value: "3"  
            - name: KAFKA_LOG_DIRS
              value: "/kafka/logs"
          ports:
            - name: client
              containerPort: 9092
          volumeMounts:
            - name: kafka-data
              mountPath: /kafka
      volumes:
        - name: kafka-data
          persistentVolumeClaim:
            claimName: kafka-pvc-1

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka-2
  namespace: hyperauth
  labels:
    app: kafka-2
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka-2
  template:
    metadata:
      labels:
        app: kafka-2
    spec:
      imagePullSecrets:
        - name : docker-pull-secret
      containers:
        - name: kafka
          image: wurstmeister/kafka:2.12-2.0.1
          env:
            - name: KAFKA_ADVERTISED_LISTENERS
              value: "INSIDE://kafka-2.hyperauth:9092"
            - name: KAFKA_LISTENERS
              value: "INSIDE://:9092"
            - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
              value: "INSIDE:PLAINTEXT"
            - name: KAFKA_INTER_BROKER_LISTENER_NAME
              value: "INSIDE"
            - name: KAFKA_ZOOKEEPER_CONNECT
              value: "zookeeper:2181"
            - name: KAFKA_CREATE_TOPICS
              value: "tmax:1:3"   # Topic명:Partition개수:Replica개수
            - name: KAFKA_AUTO_CREATE_TOPICS_ENABLE
              value: "true"
            - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
              value: "3"  
            - name: KAFKA_LOG_DIRS
              value: "/kafka/logs"
            - name: KAFKA_BROKER_ID
              value: "502"
          ports:
            - name: client
              containerPort: 9092
          volumeMounts:
            - name: kafka-data
              mountPath: /kafka
      volumes:
        - name: kafka-data
          persistentVolumeClaim:
            claimName: kafka-pvc-2

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka-3
  namespace: hyperauth
  labels:
    app: kafka-3
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka-3
  template:
    metadata:
      labels:
        app: kafka-3
    spec:
      imagePullSecrets:
        - name : docker-pull-secret
      containers:
        - name: kafka
          image: wurstmeister/kafka:2.12-2.0.1
          env:
            - name: KAFKA_ADVERTISED_LISTENERS
              value: "INSIDE://kafka-3.hyperauth:9092"
            - name: KAFKA_LISTENERS
              value: "INSIDE://:9092"
            - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
              value: "INSIDE:PLAINTEXT"
            - name: KAFKA_INTER_BROKER_LISTENER_NAME
              value: "INSIDE"
            - name: KAFKA_ZOOKEEPER_CONNECT
              value: "zookeeper:2181"
            - name: KAFKA_CREATE_TOPICS
              value: "tmax:1:3"   # Topic명:Partition개수:Replica개수
            - name: KAFKA_AUTO_CREATE_TOPICS_ENABLE
              value: "true"
            - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
              value: "3"  
            - name: KAFKA_LOG_DIRS
              value: "/kafka/logs"
            - name: KAFKA_BROKER_ID
              value: "503"
          ports:
            - name: client
              containerPort: 9092
          volumeMounts:
            - name: kafka-data
              mountPath: /kafka
      volumes:
        - name: kafka-data
          persistentVolumeClaim:
            claimName: kafka-pvc-3

  
